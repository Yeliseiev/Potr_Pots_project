{"mappings":"ACGe,IAAI,OAAO,UAAW,CACnC,UAAW,aACX,KAAM,CAAA,EAEN,WAAY,CACV,GAAI,qBACJ,UAAW,CAAA,CACb,CACF,GAEA,OAAO,gBAAgB,CAAC,aAAc,WAChC,AAAyB,UAAzB,OAAO,QAAQ,CAAC,IAAI,CACtB,SAAS,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,4BAE5B,SAAS,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,2BAEnC,GAEA,IAAM,EAAO,SAAS,aAAa,CAAC,SAC9B,EAAS,SAAS,gBAAgB,CAAC,gBASzC,EAAK,gBAAgB,CAAC,SAPtB,SAA0B,CAAK,EAC7B,EAAM,cAAc,GAEpB,EAAO,OAAO,CAAC,SAAA,CAAf,EACE,EAAM,KAAK,CAAG,EAChB,EACF,GAYA,IAAM,EAAW,IAAI,qBATrB,SAAiB,CAAK,EACpB,EAAM,OAAO,CAAC,SAAA,CAAd,EACM,EAAO,cAAc,EACvB,EAAO,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,UAEhC,EACF,GAIM,EAAQ,SAAS,gBAAgB,CAAC,cAEnC,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAa,CAAA,CAAA,OAAA,QAAA,CAAA,GAAb,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAL,CAAA,EAAA,CAAK,IAAM,EAAN,EAAA,KAAA,CACH,EAAS,OAAO,CAAC,E,C,C,M,E,CADd,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\n// eslint-disable-next-line no-unused-vars, no-undef\nvar swiper = new Swiper(\".swiper\", {\n    direction: \"horizontal\",\n    loop: true,\n    pagination: {\n        el: \".swiper-pagination\",\n        clickable: true\n    }\n});\nwindow.addEventListener(\"hashchange\", function() {\n    if (window.location.hash === \"#menu\") document.body.classList.add(\"page__content--with-menu\");\n    else document.body.classList.remove(\"page__content--with-menu\");\n});\nvar form = document.querySelector(\".form\");\nvar inputs = document.querySelectorAll(\".form__input\");\nfunction handleFromSubmit(event) {\n    event.preventDefault();\n    inputs.forEach(function(input) {\n        input.value = \"\";\n    });\n}\nform.addEventListener(\"submit\", handleFromSubmit);\nfunction onEntry(entry) {\n    entry.forEach(function(change) {\n        if (change.isIntersecting) change.target.classList.add(\"visible\");\n    });\n}\n// eslint-disable-next-line no-undef\nvar observer = new IntersectionObserver(onEntry);\nvar names = document.querySelectorAll(\".animation\");\nvar _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\ntry {\n    for(var _iterator = names[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n        var elm = _step.value;\n        observer.observe(elm);\n    }\n} catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n} finally{\n    try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n        }\n    } finally{\n        if (_didIteratorError) {\n            throw _iteratorError;\n        }\n    }\n}\n\n//# sourceMappingURL=index.355ae942.js.map\n","'use strict';\n\n// eslint-disable-next-line no-unused-vars, no-undef\nconst swiper = new Swiper('.swiper', {\n  direction: 'horizontal',\n  loop: true,\n\n  pagination: {\n    el: '.swiper-pagination',\n    clickable: true,\n  },\n});\n\nwindow.addEventListener('hashchange', () => {\n  if (window.location.hash === '#menu') {\n    document.body.classList.add('page__content--with-menu');\n  } else {\n    document.body.classList.remove('page__content--with-menu');\n  }\n});\n\nconst form = document.querySelector('.form');\nconst inputs = document.querySelectorAll('.form__input');\n\nfunction handleFromSubmit(event) {\n  event.preventDefault();\n\n  inputs.forEach(input => {\n    input.value = '';\n  });\n}\nform.addEventListener('submit', handleFromSubmit);\n\nfunction onEntry(entry) {\n  entry.forEach(change => {\n    if (change.isIntersecting) {\n      change.target.classList.add('visible');\n    }\n  });\n}\n\n// eslint-disable-next-line no-undef\nconst observer = new IntersectionObserver(onEntry);\nconst names = document.querySelectorAll('.animation');\n\nfor (const elm of names) {\n  observer.observe(elm);\n}\n"],"names":["Swiper","direction","loop","pagination","el","clickable","window","addEventListener","location","hash","document","body","classList","add","remove","form","querySelector","inputs","querySelectorAll","event","preventDefault","forEach","input","value","observer","IntersectionObserver","entry","change","isIntersecting","target","names","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","elm","observe","err","return"],"version":3,"file":"index.355ae942.js.map"}